{"ast":null,"code":"var _jsxFileName = \"/home/hetul/Todo/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalData = () => {\n  const list = localStorage.getItem(\"lists\");\n\n  if (list) {\n    console.log(list);\n    return JSON.parse(localStorage.getItem(\"lists\"));\n  } else {\n    return [];\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [items, setitems] = useState(\"\");\n  const [elements, setElements] = useState([]);\n\n  const onchangesDone = event => {\n    setitems(event.target.value);\n  };\n\n  const listOfItems = () => {\n    localStorage.setItem(\"lists\", JSON.stringify(items));\n    const allinputdata = {\n      id: new Date().getTime().toString,\n      name: items\n    };\n    setElements(oldItems => {\n      return [...oldItems, allinputdata];\n    });\n    setitems(\"\");\n  };\n\n  const deleteitems = index => {\n    setElements(oldItems => {\n      return oldItems.filter(value => {\n        localStorage.removeItem(oldItems);\n        return index !== value.id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"txt_username\",\n      placeholder: \"Enter Your Todo\",\n      className: \"txt_username\",\n      value: items,\n      onChange: onchangesDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      name: \"add todo\",\n      id: \"add_todo\",\n      value: \"add\",\n      className: \"button\",\n      onClick: listOfItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: elements.map(element => {\n          return /*#__PURE__*/_jsxDEV(TodoList, {\n            id: element.id,\n            text: element.name,\n            onSelect: deleteitems\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"DvyCAssrp5+xJL2n+yn5+OGT6I4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hetul/Todo/src/app.js"],"names":["React","useState","TodoList","getLocalData","list","localStorage","getItem","console","log","JSON","parse","App","items","setitems","elements","setElements","onchangesDone","event","target","value","listOfItems","setItem","stringify","allinputdata","id","Date","getTime","toString","name","oldItems","deleteitems","index","filter","removeItem","map","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\nimport TodoList from \"./TodoList\";\n\nconst getLocalData = () => {\n\tconst list = localStorage.getItem(\"lists\");\n\tif (list) {\n\t\tconsole.log(list);\n\t\treturn JSON.parse(localStorage.getItem(\"lists\"));\n\t} else {\n\t\treturn [];\n\t}\n};\n\nconst App = () => {\n\tconst [items, setitems] = useState(\"\");\n\tconst [elements, setElements] = useState([]);\n\n\tconst onchangesDone = (event) => {\n\t\tsetitems(event.target.value);\n\t};\n\n\tconst listOfItems = () => {\n\t\tlocalStorage.setItem(\"lists\", JSON.stringify(items));\n\t\tconst allinputdata = { id: new Date().getTime().toString, name: items };\n\t\tsetElements((oldItems) => {\n\t\t\treturn [...oldItems, allinputdata];\n\t\t});\n\t\tsetitems(\"\");\n\t};\n\n\tconst deleteitems = (index) => {\n\t\tsetElements((oldItems) => {\n\t\t\treturn oldItems.filter((value) => {\n\t\t\t\tlocalStorage.removeItem(oldItems);\n\t\t\t\treturn index !== value.id;\n\t\t\t});\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"todo_div\">\n\t\t\t<h1> Todo</h1>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"username\"\n\t\t\t\tid=\"txt_username\"\n\t\t\t\tplaceholder=\"Enter Your Todo\"\n\t\t\t\tclassName=\"txt_username\"\n\t\t\t\tvalue={items}\n\t\t\t\tonChange={onchangesDone}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<input\n\t\t\t\ttype=\"button\"\n\t\t\t\tname=\"add todo\"\n\t\t\t\tid=\"add_todo\"\n\t\t\t\tvalue=\"add\"\n\t\t\t\tclassName=\"button\"\n\t\t\t\tonClick={listOfItems}\n\t\t\t/>\n\n\t\t\t<div className=\"elements\">\n\t\t\t\t<ol>\n\t\t\t\t\t{elements.map((element) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\t\tkey={element.id}\n\t\t\t\t\t\t\t\tid={element.id}\n\t\t\t\t\t\t\t\ttext={element.name}\n\t\t\t\t\t\t\t\tonSelect={deleteitems}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}